# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Download runway.bin
        run: |
          wget https://runwaydownloads.blob.core.windows.net/appdl/runway.bin
          chmod +x ./runway.bin

      # Runs a set of commands using the runners shell
      - name: Auth to Runway
        run: |
          ./runway.bin login -u ${{ secrets.RUNWAY_EMAIL }} -p ${{ secrets.RUNWAY_PASSWORD }}

      - name: Build Each Action
        shell: pwsh
        run: |
          $baseDir = Get-Item ./
          foreach ($manifest in (Get-ChildItem ./ -Filter manifest.txt -Recurse)) {
            # Determine namespace based on folder structure
            $rPath = $manifest.FullName.Replace($baseDir.FullName,'').Trim('\/')
            $namespace = ($rPath -split '\\|\/' | Select-Object -SkipLast 1) -join ':'
            # Publish the Action
            ./runway.bin build -it $manifest.FullName -p $namespace.ToLower()
          }